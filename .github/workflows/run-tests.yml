name: Run Tests

on:
  push:
    branches:
      - master

jobs:
  build-and-test:
    name: Build and Test # Builds and tests for TweetNacl-iOS scheme using any available iPhone simulator
    runs-on: macos-15

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Select Xcode Version
        run: sudo xcode-select -s /Applications/Xcode_16.0.app

      - name: Find Simulator
        id: find-simulator
        run: |
          device=`xcrun xctrace list devices 2>&1 | grep -oE 'iPhone.*?[^\(]+ \(.+?\)' | head -1 | awk '{$1=$1;print}'`
          echo "device_name=$(echo "$device" | sed -e "s/ Simulator.*//")" >> "$GITHUB_OUTPUT"
          echo "device_os=$(echo "$device" | sed -n 's/.*(\(.*\)).*/\1/p')" >> "$GITHUB_OUTPUT"

      - name: Find file to build
        id: find-file-to-build
        run: |
          if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then filetype_parameter="workspace" && file_to_build="`ls -A | grep -i \\.xcworkspace\$`"; else filetype_parameter="project" && file_to_build="`ls -A | grep -i \\.xcodeproj\$`"; fi
          echo "file_to_build=$(echo $file_to_build | awk '{$1=$1;print}')" >> "$GITHUB_OUTPUT"
          echo "filetype_parameter=$filetype_parameter" >> "$GITHUB_OUTPUT"
        
      - name: Build
        env:
          scheme: 'TweetNacl-iOS'
          platform: 'iOS Simulator'
          device_name: ${{ steps.find-simulator.outputs.device_name }}
          device_os: ${{ steps.find-simulator.outputs.device_os }}
          file_to_build: ${{ steps.find-file-to-build.outputs.file_to_build }}
          filetype_parameter: ${{ steps.find-file-to-build.outputs.filetype_parameter }}
        run: |
          cd Example
          pod install
          xcodebuild build-for-testing -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -destination "platform=$platform,OS=$device_os,name=$device_name"

      - name: Test
        env:
          scheme: 'TweetNacl-iOS'
          platform: 'iOS Simulator'
          device_name: ${{ steps.find-simulator.outputs.device_name }}
          device_os: ${{ steps.find-simulator.outputs.device_os }}
          file_to_build: ${{ steps.find-file-to-build.outputs.file_to_build }}
          filetype_parameter: ${{ steps.find-file-to-build.outputs.filetype_parameter }}
        run: |
          cd Example
          xcodebuild test-without-building -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -destination "platform=$platform,OS=$device_os,name=$device_name"
